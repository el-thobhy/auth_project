// <auto-generated />
using System;
using Daily_Note.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace daily_note_be.Migrations
{
    [DbContext(typeof(DailyNoteDbContext))]
    [Migration("20250503152759_initDatabase")]
    partial class initDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Daily_Note.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Attempt")
                        .HasColumnType("int");

                    b.Property<string>("Created_by")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Created_on")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deleted_by")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Deleted_on")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValue("auriwanyasper@gmail.com");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Is_delete")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Modified_by")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Modified_on")
                        .HasColumnType("datetime2");

                    b.Property<string>("Otp")
                        .HasColumnType("char(6)");

                    b.Property<DateTime?>("OtpExpire")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("RoleGroupId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("RoleGroupId");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("m_accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Attempt = 0,
                            Created_by = "admin",
                            Created_on = new DateTime(2025, 5, 3, 22, 27, 59, 216, DateTimeKind.Local).AddTicks(3345),
                            Email = "auriwanyasper@gmail.com",
                            FirstName = "Super",
                            Is_delete = false,
                            LastName = "Admin",
                            Password = "ac9689e2272427085e35b9d3e3e8bed88cb3434828b43b86fc0596cad4c6e270",
                            RoleGroupId = 1,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Attempt = 0,
                            Created_by = "admin",
                            Created_on = new DateTime(2025, 5, 3, 22, 27, 59, 216, DateTimeKind.Local).AddTicks(3349),
                            Email = "user@gmail.com",
                            FirstName = "Regular",
                            Is_delete = false,
                            LastName = "User",
                            Password = "c431bffe6c2cf3b69ad2e9cbbe9806835dbced7c97b9d3f946387ee92eb17018",
                            RoleGroupId = 2,
                            UserName = "user"
                        });
                });

            modelBuilder.Entity("Daily_Note.Models.AuthorizationGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Created_by")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Created_on")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deleted_by")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Deleted_on")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Is_delete")
                        .HasColumnType("bit");

                    b.Property<string>("Modified_by")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Modified_on")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RoleGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleGroupId");

                    b.ToTable("m_authorization_groups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_by = "admin",
                            Created_on = new DateTime(2025, 5, 3, 22, 27, 59, 216, DateTimeKind.Local).AddTicks(3379),
                            Is_delete = false,
                            Role = "account",
                            RoleGroupId = 1
                        },
                        new
                        {
                            Id = 2,
                            Created_by = "admin",
                            Created_on = new DateTime(2025, 5, 3, 22, 27, 59, 216, DateTimeKind.Local).AddTicks(3383),
                            Is_delete = false,
                            Role = "role",
                            RoleGroupId = 1
                        },
                        new
                        {
                            Id = 3,
                            Created_by = "admin",
                            Created_on = new DateTime(2025, 5, 3, 22, 27, 59, 216, DateTimeKind.Local).AddTicks(3385),
                            Is_delete = false,
                            Role = "authorization",
                            RoleGroupId = 1
                        },
                        new
                        {
                            Id = 4,
                            Created_by = "admin",
                            Created_on = new DateTime(2025, 5, 3, 22, 27, 59, 216, DateTimeKind.Local).AddTicks(3388),
                            Is_delete = false,
                            Role = "home",
                            RoleGroupId = 2
                        });
                });

            modelBuilder.Entity("Daily_Note.Models.RoleGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Created_by")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Created_on")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deleted_by")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Deleted_on")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Is_delete")
                        .HasColumnType("bit");

                    b.Property<string>("Modified_by")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Modified_on")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GroupName")
                        .IsUnique();

                    b.ToTable("m_role_group");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_by = "admin",
                            Created_on = new DateTime(2025, 5, 3, 22, 27, 59, 216, DateTimeKind.Local).AddTicks(3058),
                            GroupName = "Admin",
                            Is_delete = false
                        },
                        new
                        {
                            Id = 2,
                            Created_by = "admin",
                            Created_on = new DateTime(2025, 5, 3, 22, 27, 59, 216, DateTimeKind.Local).AddTicks(3090),
                            GroupName = "User",
                            Is_delete = false
                        });
                });

            modelBuilder.Entity("Daily_Note.Models.Account", b =>
                {
                    b.HasOne("Daily_Note.Models.RoleGroup", "RoleGroup")
                        .WithMany()
                        .HasForeignKey("RoleGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoleGroup");
                });

            modelBuilder.Entity("Daily_Note.Models.AuthorizationGroup", b =>
                {
                    b.HasOne("Daily_Note.Models.RoleGroup", "RoleGroup")
                        .WithMany("AuthorizationGroups")
                        .HasForeignKey("RoleGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoleGroup");
                });

            modelBuilder.Entity("Daily_Note.Models.RoleGroup", b =>
                {
                    b.Navigation("AuthorizationGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
